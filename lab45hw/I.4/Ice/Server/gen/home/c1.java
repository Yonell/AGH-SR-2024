//
// Copyright (c) ZeroC, Inc. All rights reserved.
//
//
// Ice version 3.7.10
//
// <auto-generated>
//
// Generated from file `home.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package home;

public class c1 extends com.zeroc.Ice.Value
{
    public c1()
    {
    }

    public c1(int val1)
    {
        this.val1 = val1;
    }

    public c1(int val1, int val2)
    {
        this.val1 = val1;
        setVal2(val2);
    }

    public int val1;

    private int val2;
    private boolean _val2;

    public int getVal2()
    {
        if(!_val2)
        {
            throw new java.util.NoSuchElementException("val2 is not set");
        }
        return val2;
    }

    public void setVal2(int val2)
    {
        _val2 = true;
        this.val2 = val2;
    }

    public boolean hasVal2()
    {
        return _val2;
    }

    public void clearVal2()
    {
        _val2 = false;
    }

    public void optionalVal2(java.util.OptionalInt v)
    {
        if(v == null || !v.isPresent())
        {
            _val2 = false;
        }
        else
        {
            _val2 = true;
            val2 = v.getAsInt();
        }
    }

    public java.util.OptionalInt optionalVal2()
    {
        if(_val2)
        {
            return java.util.OptionalInt.of(val2);
        }
        else
        {
            return java.util.OptionalInt.empty();
        }
    }

    public c1 clone()
    {
        return (c1)super.clone();
    }

    public static String ice_staticId()
    {
        return "::home::c1";
    }

    @Override
    public String ice_id()
    {
        return ice_staticId();
    }

    /** @hidden */
    public static final long serialVersionUID = -2046439089L;

    /** @hidden */
    @Override
    protected void _iceWriteImpl(com.zeroc.Ice.OutputStream ostr_)
    {
        ostr_.startSlice(ice_staticId(), -1, true);
        ostr_.writeInt(val1);
        if(_val2)
        {
            ostr_.writeInt(2, val2);
        }
        ostr_.endSlice();
    }

    /** @hidden */
    @Override
    protected void _iceReadImpl(com.zeroc.Ice.InputStream istr_)
    {
        istr_.startSlice();
        val1 = istr_.readInt();
        if(_val2 = istr_.readOptional(2, com.zeroc.Ice.OptionalFormat.F4))
        {
            val2 = istr_.readInt();
        }
        istr_.endSlice();
    }
}
